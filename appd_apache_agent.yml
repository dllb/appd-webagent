---
- name: Install/Update Application Dynamics Java Server Agent
  hosts: all

  vars_files:
    - vars.yml

  vars:
    appd_agent_upgrade: false    
    appd_agent_action: ""

  tasks:
  - name: "grab appd install file from {{ appd_webagent_source_url }}"
    local_action: "command wget -N {{ appd_webagent_source_url }}"
    changed_when: false
    run_once: true

  - name: Ansible check if VERSION.tst file exists in target directory.
    stat:
      path: "{{ appd_apache_agent_home }}/appdynamics-sdk-native/VERSION.txt"
    register: version_file_details  

  - name: Review file stat results and set action to new-install if the file does not exist
    set_fact:
      appd_agent_action: new-install
    when: version_file_details.stat.exists == false

  - name: "read version file contents from {{ appd_apache_agent_home }}/appdynamics-sdk-native/VERSION.txt"
    slurp:
      src: "{{ appd_apache_agent_home }}/appdynamics-sdk-native/VERSION.txt"
    register: ver_file_content  
    when: appd_agent_action != 'new-install'

  - name: Extract the version from the string read in
    set_fact:
      installed_ver: "{{ ver_file_content['content'] | b64decode | regex_search(regex, '\\1')  }}"
    vars:
      regex: '^(\d+\.\d+\.\d+)\..*'  
    when: appd_agent_action != 'new-install'

  - debug:
      var: installed_ver

  - debug:
      var: appd_webagent_version

  - name: "Test to see if target version is equal to the installed version and set the action to manage-config"
    set_fact: 
      appd_agent_action: "manage-config"
    # Skip this step is we already know its a new install
    when: 
      - appd_agent_action != 'new-install' 
      - installed_ver.0 is version(appd_webagent_version, operator='eq')

  - debug:
      var: appd_agent_action  

  - name: Set the action to upgrade if the version ansible has is newer than what is installed
    set_fact: 
      appd_agent_action: "{{ 'upgrade' if installed_ver is version(appd_webagent_version, '>') else 'new-install'}}"
    # skip this step is we already know it a new install or just a config change
    when: appd_agent_action == ''
    
  - debug:
      msg: "This is a web agent {{ appd_agent_action }} to version {{ appd_webagent_version }}"

  - assert:
      that: appd_agent_action != '' 

  - name: backup existing agent directory before upgrading
    command: "mv {{ appd_apache_agent_home }}/appdynamics-sdk-native {{ appd_apache_agent_home }}/appdynamics-sdk-native.{{ installed_ver }}"
    when: appd_agent_action == 'upgrade'      

  - name: "Ensure Appd apache agent home directory {{ appd_apache_agent_home }} is present and owned by {{ appd_user }}" 
    file:
      path: "{{ appd_apache_agent_home }}"
      state: directory
      mode: 0775
      owner: "{{ appd_user }}"
      group: "{{ appd_user }}"
#    become: yes
#    become_user: "{{ appd_user }}"  

  - name: "Unarchive AppD Apache agent from {{ appd_apache_agent }} to {{ appd_apache_agent_home }}"
    unarchive:
      src: "{{ appd_apache_agent }}"
      dest: "{{ appd_apache_agent_home }}"
      #creates: "{{ appd_apache_agent_home }}/appdynamics-sdk-native"
      owner: "{{ appd_user }}"
      group: "{{ appd_user }}"
    become: yes
    become_user: "{{ appd_user }}"     
    when: appd_agent_action == 'upgrade' or appd_agent_action == 'new-install'

  - name: "Remove existing apache agent config file {{ appd_agent_config_file }}"
    file:
      path: "{{ appd_agent_config_file }}"
      state: absent    

## Create a new appd agent config file 
  - name: "Process template for {{appd_agent_config_file}}"
    template:
     src: "{{ appd_agent_config_template }}"
     dest: "{{ appd_agent_config_file }}"
     owner: "{{ appd_user }}"
     group: "{{ appd_user }}"
     mode: 0644
     force: yes
     backup: yes
    become: yes
    become_user: "{{ appd_user }}"      

  - name: "Remove the Include directive in {{ appd_apache_conf_file }}"
    become: yes
    become_user: "{{ appd_user }}"  
    lineinfile:
      path: "{{appd_apache_conf_dir }}/{{ item.config_file }}"
      line: "{{ appd_apache_config_line_old }}"
      regex: "^{{ appd_apache_config_line_old }}"
      state: absent
      insertafter: ^BrowserMatch\s*.*redirect-carefully$
      backup: yes 
    with_items: "{{ remove_nodes }}"   
    when: remove_nodes is defined

  - name: "Remove instances/virtual servers being monitored from {{ apache_nodes.virt_server }}"      
    become: yes
    become_user: "{{ appd_user }}"
    lineinfile:
      path: "{{appd_apache_conf_dir }}/{{ item.config_file }}"
      regex: 'AppDynamicsApplicationContext.*{{ item.app }} {{ item.tier }} {{inventory_hostname}}.*$'
      state: absent
    with_items: "{{ remove_nodes }}"
    loop_control:
      index_var: counter 
    when: remove_nodes is defined      

  - name: "Add the Include directive to {{ appd_apache_conf_file }}"
    become: yes
    become_user: "{{ appd_user }}"  
    lineinfile:
      path: "{{appd_apache_conf_dir }}/{{ item.config_file }}"
      line: "Include {{ appd_agent_config_file }}"
      regex: ^\s*Include\s*.*/{{ appd_agent_config }}
      state: present
      insertafter: ^BrowserMatch\s*.*redirect-carefully$
      backup: yes 
    with_items: "{{ apache_nodes }}"   

  - name: "Add AppDynamicsApplicationContext to virtual server configuration for {{ apache_nodes.virt_server }}"
    become: yes
    become_user: "{{ appd_user }}"
    lineinfile:
      path: "{{appd_apache_conf_dir }}/{{ item.config_file }}"
      line: " AppDynamicsApplicationContext {{ item.app }} {{ item.tier }} {{ item.acronym }}{{inventory_hostname}}"
      regex: 'AppDynamicsApplicationContext.*{{ item.tier }}.*$'
      insertafter: ^.*((S|s)erver(N|n)ame|(S|s)erver(A|a)lias)\s* {{ item.virt_server }}.*$
      state: present
    with_items: "{{ apache_nodes }}"
    loop_control:
      index_var: counter

  - name: "Check {{ appd_apache_agent_home }}/appdynamics-sdk-native/conf/appdynamics_sdk_log4cxx.xml"
    stat:
      path: "{{ appd_apache_agent_home }}/appdynamics-sdk-native/conf/appdynamics_sdk_log4cxx.xml"
    register: install_file_details  

  - name: "Run appd {{ appd_apache_agent_home }}/appdynamics-sdk-native/install.sh - ignore all errors"  
    become_user: "{{ appd_user }}"
    shell: "{{ appd_apache_agent_home }}/appdynamics-sdk-native/install.sh"
    when: install_file_details.stat.exists == false
    ignore_errors: yes

  - name: "Start/restart the appd web proxy {{ appd_proxy_restart_cmd }}"
    shell: |
      unset PROXY_PID
      #PROXY_PID=`ps -ef | grep "[P]roxyControlEntryPoint" | awk '{ print $2 }'`
      #if [ ! -z "$PROXY_PID" ]; then
      #  kill $PROXY_PID
      #  sleep 5
      #fi
      #nohup {{ appd_apache_agent_home }}/appdynamics-sdk-native/runSDKProxy.sh >>/dev/null 2> {{ appd_apache_agent_home }}/appdynamics-sdk-native/logs/proxy.out &
    become: yes
    become_user: "{{ appd_user }}"
    changed_when: false

  - name: "Clean up downloaded agent file {{ appd_apache_agent }}"
    local_action:     
      module: file
      path: "{{ appd_apache_agent }}"
      state: absent
    run_once: true      
    changed_when: false
